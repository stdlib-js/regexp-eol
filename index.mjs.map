{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/regexp_capture.js","../lib/regexp.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean' ;\nimport { isPrimitive as isString } from '@stdlib/assert-is-string' ;\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0R32h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( '0R32i', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( '0R330', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport validate from './validate.js' ;\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '\\\\r?\\\\n';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a newline character sequence.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_EOL = reEOL();\n* var bool = RE_EOL.test( '\\r\\n' );\n* // returns true\n*\n* @example\n* import replace from '@stdlib/string-replace' ;\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*/\nfunction reEOL( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /\\r?\\n/;\n}\n\n\n// EXPORTS //\n\nexport default reEOL;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reEOL from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Captures a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /(\\r?\\n)/\n*/\nvar REGEXP_CAPTURE = reEOL({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nexport default REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport reEOL from './main.js' ;\n\n\n// MAIN //\n\n/**\n* Matches a newline character sequence.\n*\n* Regular expression: `/\\r?\\n/`\n*\n* -   `\\r?`\n*     -   match a carriage return character (optional)\n*\n* -   `\\n`\n*     -   match a line feed character\n*\n* @constant\n* @type {RegExp}\n* @default /\\r?\\n/\n*/\nvar REGEXP = reEOL();\n\n\n// EXPORTS //\n\nexport default REGEXP;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Regular expression to match a newline character sequence.\n*\n* @module @stdlib/regexp-eol\n*\n* @example\n* import reEOL from '@stdlib/regexp-eol' ;\n* var RE_EOL = reEOL();\n*\n* var bool = RE_EOL.test( '\\n' );\n* // returns true\n*\n* bool = RE_EOL.test( '\\\\r\\\\n' );\n* // returns false\n*\n* @example\n* import reEOL from '@stdlib/regexp-eol' ;\n* import replace from '@stdlib/string-replace' ;\n*\n* var RE_EOL = reEOL({\n*     'flags': 'g'\n* });\n* var str = '1\\n2\\n3';\n* var out = replace( str, RE_EOL, '' );\n*\n* @example\n* import reEOL from '@stdlib/regexp-eol' ;\n* var bool = reEOL.REGEXP.test( '\\r\\n' );\n* // returns true\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport reEOL from './main.js' ;\nimport REGEXP_CAPTURE from './regexp_capture.js' ;\nimport REGEXP from './regexp.js' ;\n\n\n// MAIN //\n\nsetReadOnly( reEOL, 'REGEXP', REGEXP );\nsetReadOnly( reEOL, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nexport default reEOL;\n"],"names":["validate","opts","options","isObject","hasOwnProp","flags","isString","TypeError","format","capture","isBoolean","reEOL","err","arguments","length","RegExp","REGEXP_CAPTURE","REGEXP","setReadOnly"],"mappings":";;8kBAmDA,SAASA,EAAUC,EAAMC,GACxB,OAAMC,EAAUD,GAGXE,EAAYF,EAAS,WACzBD,EAAKI,MAAQH,EAAQG,OACfC,EAAUL,EAAKI,QACb,IAAIE,UAAWC,EAAQ,QAAS,QAASP,EAAKI,QAGlDD,EAAYF,EAAS,aACzBD,EAAKQ,QAAUP,EAAQO,SACjBC,EAAWT,EAAKQ,UACd,IAAIF,UAAWC,EAAQ,QAAS,UAAWP,EAAKQ,UAGlD,KAdC,IAAIF,UAAWC,EAAQ,QAASN,ICGzC,SAASS,EAAOT,GACf,IAAID,EACAW,EACJ,GAAKC,UAAUC,OAAS,EAAI,CAG3B,GADAF,EAAMZ,EADNC,EAAO,GACeC,GAErB,MAAMU,EAEP,OAAKX,EAAKQ,QACF,IAAIM,OAAQ,YAAuBd,EAAKI,OAEzC,IAAIU,OAzCO,UAyCgBd,EAAKI,OAExC,MAAO,QCzBL,IAACW,EAAiBL,EAAM,CAC1BF,SAAW,ICJRQ,EAASN,ICmBbO,EAAAP,EAAA,SAAAM,GACAC,EAAAP,EAAA,iBAAAK"}